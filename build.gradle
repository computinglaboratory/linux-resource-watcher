plugins {
    id 'groovy'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'com.computinglaboratory'
version '1.7'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.10'
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = "$mavenCentralUser"
                password = "$mavenCentralPassword"
            }
        }
    }
    publications {

        mavenJava(MavenPublication) {
            artifactId = 'resourcewatcher'
            from components.java
            pom {
                name = 'Resource Watcher'
                description = 'Groovy-based Linux, Mac, Windows resources watcher (cpu, gpu, ram, disk, ...)'
                url = 'https://github.com/computinglaboratory/resourcewatcher'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kszewc'
                        name = "Kamil Szewc"
                        email = 'kamil.szewc@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/computinglaboratory/resourcewatcher.git'
                    developerConnection = 'scm:git:https://github.com/computinglaboratory/resourcewatcher.git'
                    url = 'https://github.com/computinglaboratory/resourcewatcher.git'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    sign configurations.archives
}

